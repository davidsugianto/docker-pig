---

version: "3.1"

networks:
  app-tier:
    driver: bridge

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    expose:
      - '3000'
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      - ./config/provisioning/:/etc/grafana/provisioning/:rw
    environment:
      - 'TZ=${TIMEZONE}'
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}
    depends_on:
      - prometheus
    networks:
      - app-tier

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:rw
      - ./config/prometheus/alert.rules:/etc/prometheus/alert.rules:rw
      # - ./config/prometheus/prod-targets.yml:/etc/prometheus/prod-targets.yml:rw
    environment:
      - 'TZ=${TIMEZONE}'
    expose:
      - '9090'
    networks:
      - app-tier

  alertmanager:
    image: prom/alertmanager:v0.19.0
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/:rw
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    expose:
      - '9093'
    networks:
      - app-tier

  # pushgateway:
  #   image: prom/pushgateway:v1.0.0
  #   container_name: pushgateway
  #   restart: always
  #   expose:
  #     - '9091'
  #   networks:
  #     - app-tier

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    expose:
      - '9100'
    networks:
      - app-tier

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    expose:
      - '8080'
    networks:
      - app-tier

  httpd:
    container_name: nginx
    image: bitnami/nginx:${NGINX_VERSION}-${OS_VERSION}
    hostname: nginx
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    networks:
      - app-tier
    ports:
      - '80:8080'
      - '443:443'
    volumes:
      - ./config/nginx/vhost:/opt/bitnami/nginx/conf/vhosts:ro
      - ./logs/nginx:/opt/bitnami/nginx/logs:rw
